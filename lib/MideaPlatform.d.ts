import { API, DynamicPlatformPlugin, Logger, PlatformAccessory, PlatformConfig, Service, Characteristic } from 'homebridge';
import { MideaAccessory } from './MideaAccessory';
export declare class MideaPlatform implements DynamicPlatformPlugin {
    readonly log: Logger;
    readonly config: PlatformConfig;
    readonly api: API;
    readonly Service: typeof Service;
    readonly Characteristic: typeof Characteristic;
    jar: any;
    updateInterval: any;
    reauthInterval: any;
    atoken: string;
    sId: string;
    hgIdArray: any;
    dataKey: string;
    baseHeader: object;
    readonly accessories: PlatformAccessory[];
    constructor(log: Logger, config: PlatformConfig, api: API);
    onReady(): Promise<void>;
    login(): Promise<unknown>;
    getUserList(): Promise<unknown>;
    sendCommand(device: MideaAccessory, order: any): Promise<unknown>;
    getSign(path: string, form: any): any;
    getSignPassword(loginId: string): any;
    generateDataKey(): any;
    decryptAes(reply: number[]): any;
    encryptAes(query: number[]): any;
    updateValues(): void;
    sendUpdateToDevice(device: MideaAccessory): void;
    configureAccessory(accessory: PlatformAccessory): void;
}
